{"ast":null,"code":"import css from'./Statistics.module.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function getRandomHexColor(){var bgColor=\"#\".concat(Math.floor(Math.random()*16777215).toString(16));return bgColor;}export var Statistics=function Statistics(_ref){var title=_ref.title,stats=_ref.stats;return/*#__PURE__*/_jsxs(\"section\",{className:css.statistics,children:[title&&/*#__PURE__*/_jsx(\"h2\",{className:css.title,children:title}),/*#__PURE__*/_jsx(\"ul\",{className:css.stat_list,children:stats.map(function(_ref2){var id=_ref2.id,label=_ref2.label,percentage=_ref2.percentage;return/*#__PURE__*/_jsxs(\"li\",{style:{backgroundColor:getRandomHexColor()},children:[/*#__PURE__*/_jsx(\"span\",{className:css.label,children:label}),/*#__PURE__*/_jsxs(\"span\",{className:css.quantity,children:[percentage,\"%\"]})]},id);})})]});};","map":{"version":3,"sources":["C:/Users/HP/AppData/Local/GitHubDesktop/projects/goit-react-hw-01-components/src/components/statistics/Statistics.jsx"],"names":["css","getRandomHexColor","bgColor","Math","floor","random","toString","Statistics","title","stats","statistics","stat_list","map","id","label","percentage","backgroundColor","quantity"],"mappings":"AACA,MAAOA,CAAAA,GAAP,KAAgB,yBAAhB,C,wFAEA,QAASC,CAAAA,iBAAT,EAA6B,CAC3B,GAAIC,CAAAA,OAAO,YAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,GAAgB,QAA3B,EAAqCC,QAArC,CAA8C,EAA9C,CAAP,CAAX,CACA,MAAOJ,CAAAA,OAAP,CACD,CAED,MAAO,IAAMK,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,UAAGC,CAAAA,KAAH,MAAGA,KAAH,CAAUC,KAAV,MAAUA,KAAV,oBACxB,iBAAS,SAAS,CAAET,GAAG,CAACU,UAAxB,WACGF,KAAK,eAAI,WAAI,SAAS,CAAER,GAAG,CAACQ,KAAnB,UAA2BA,KAA3B,EADZ,cAGE,WAAI,SAAS,CAAER,GAAG,CAACW,SAAnB,UACGF,KAAK,CAACG,GAAN,CAAU,mBAAGC,CAAAA,EAAH,OAAGA,EAAH,CAAOC,KAAP,OAAOA,KAAP,CAAcC,UAAd,OAAcA,UAAd,oBACT,YACE,KAAK,CAAE,CACLC,eAAe,CAAEf,iBAAiB,EAD7B,CADT,wBAME,aAAM,SAAS,CAAED,GAAG,CAACc,KAArB,UAA6BA,KAA7B,EANF,cAOE,cAAM,SAAS,CAAEd,GAAG,CAACiB,QAArB,WAAgCF,UAAhC,OAPF,GAIOF,EAJP,CADS,EAAV,CADH,EAHF,GADwB,EAAnB","sourcesContent":["import PropTypes from 'prop-types';\r\nimport css from './Statistics.module.css';\r\n\r\nfunction getRandomHexColor() {\r\n  let bgColor = `#${Math.floor(Math.random() * 16777215).toString(16)}`;\r\n  return bgColor;\r\n}\r\n\r\nexport const Statistics = ({ title, stats }) => (\r\n  <section className={css.statistics}>\r\n    {title && <h2 className={css.title}>{title}</h2>}\r\n\r\n    <ul className={css.stat_list}>\r\n      {stats.map(({ id, label, percentage }) => (\r\n        <li\r\n          style={{\r\n            backgroundColor: getRandomHexColor(),\r\n          }}\r\n          key={id}\r\n        >\r\n          <span className={css.label}>{label}</span>\r\n          <span className={css.quantity}>{percentage}%</span>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  </section>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  title: PropTypes.string,\r\n  stats: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      percentage: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}