{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\AppData\\\\Local\\\\GitHubDesktop\\\\projects\\\\goit-react-hw-01-components\\\\src\\\\components\\\\friend-list\\\\FriendList.jsx\";\nimport { setSelectionRange } from '@testing-library/user-event/dist/utils';\nimport PropTypes from 'prop-types';\nimport css from './FriendList.module.css';\nimport { FriendListItem } from './FriendListItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FriendList = _ref => {\n  let {\n    friends\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: css.friend_list,\n    children: friends.map(friend => /*#__PURE__*/_jsxDEV(FriendListItem, {\n      avatar: friend.avatar,\n      isOnline: friend.isOnline,\n      name: friend.name\n    }, friend.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 3\n  }, this);\n};\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    avatar: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    isOnline: PropTypes.bool.isRequired\n  })).isRequired\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["C:/Users/HP/AppData/Local/GitHubDesktop/projects/goit-react-hw-01-components/src/components/friend-list/FriendList.jsx"],"names":["setSelectionRange","PropTypes","css","FriendListItem","FriendList","friends","friend_list","map","friend","avatar","isOnline","name","id","propTypes","arrayOf","shape","number","isRequired","string","bool"],"mappings":";AAAA,SAASA,iBAAT,QAAkC,wCAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,yBAAhB;AACA,SAASC,cAAT,QAA+B,kBAA/B;;AAEA,OAAO,MAAMC,UAAU,GAAG;AAAA,MAAC;AAAEC,IAAAA;AAAF,GAAD;AAAA,sBACxB;AAAI,IAAA,SAAS,EAAEH,GAAG,CAACI,WAAnB;AAAA,cACGD,OAAO,CAACE,GAAR,CAAYC,MAAM,iBACjB,QAAC,cAAD;AAEE,MAAA,MAAM,EAAEA,MAAM,CAACC,MAFjB;AAGE,MAAA,QAAQ,EAAED,MAAM,CAACE,QAHnB;AAIE,MAAA,IAAI,EAAEF,MAAM,CAACG;AAJf,OACOH,MAAM,CAACI,EADd;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADwB;AAAA,CAAnB;KAAMR,U;AAabA,UAAU,CAACS,SAAX,GAAuB;AACrBR,EAAAA,OAAO,EAAEJ,SAAS,CAACa,OAAV,CACPb,SAAS,CAACc,KAAV,CAAgB;AACdH,IAAAA,EAAE,EAAEX,SAAS,CAACe,MAAV,CAAiBC,UADP;AAEdR,IAAAA,MAAM,EAAER,SAAS,CAACiB,MAAV,CAAiBD,UAFX;AAGdN,IAAAA,IAAI,EAAEV,SAAS,CAACiB,MAAV,CAAiBD,UAHT;AAIdP,IAAAA,QAAQ,EAAET,SAAS,CAACkB,IAAV,CAAeF;AAJX,GAAhB,CADO,EAOPA;AARmB,CAAvB","sourcesContent":["import { setSelectionRange } from '@testing-library/user-event/dist/utils';\r\nimport PropTypes from 'prop-types';\r\nimport css from './FriendList.module.css';\r\nimport { FriendListItem } from './FriendListItem';\r\n\r\nexport const FriendList = ({ friends }) => (\r\n  <ul className={css.friend_list}>\r\n    {friends.map(friend => (\r\n      <FriendListItem\r\n        key={friend.id}\r\n        avatar={friend.avatar}\r\n        isOnline={friend.isOnline}\r\n        name={friend.name}\r\n      ></FriendListItem>\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nFriendList.propTypes = {\r\n  friends: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      avatar: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      isOnline: PropTypes.bool.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}