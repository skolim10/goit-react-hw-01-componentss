{"ast":null,"code":"/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param element\n * @param options\n * @returns {boolean} true if excluded, otherwise false\n */\nexport function isInaccessible(element) {\n  var _element$ownerDocumen;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$getComputedS = options.getComputedStyle,\n      getComputedStyle = _options$getComputedS === void 0 ? (_element$ownerDocumen = element.ownerDocument.defaultView) === null || _element$ownerDocumen === void 0 ? void 0 : _element$ownerDocumen.getComputedStyle : _options$getComputedS,\n      _options$isSubtreeIna = options.isSubtreeInaccessible,\n      isSubtreeInaccessibleImpl = _options$isSubtreeIna === void 0 ? isSubtreeInaccessible : _options$isSubtreeIna;\n\n  if (typeof getComputedStyle !== \"function\") {\n    throw new TypeError(\"Owner document of the element needs to have an associated window.\");\n  } // since visibility is inherited we can exit early\n\n\n  if (getComputedStyle(element).visibility === \"hidden\") {\n    return true;\n  }\n\n  var currentElement = element;\n\n  while (currentElement) {\n    if (isSubtreeInaccessibleImpl(currentElement, {\n      getComputedStyle: getComputedStyle\n    })) {\n      return true;\n    }\n\n    currentElement = currentElement.parentElement;\n  }\n\n  return false;\n}\n/**\n *\n * @param element\n * @param options\n * @returns {boolean} - `true` if every child of the element is inaccessible\n */\n\nexport function isSubtreeInaccessible(element) {\n  var _element$ownerDocumen2;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var _options$getComputedS2 = options.getComputedStyle,\n      getComputedStyle = _options$getComputedS2 === void 0 ? (_element$ownerDocumen2 = element.ownerDocument.defaultView) === null || _element$ownerDocumen2 === void 0 ? void 0 : _element$ownerDocumen2.getComputedStyle : _options$getComputedS2;\n\n  if (typeof getComputedStyle !== \"function\") {\n    throw new TypeError(\"Owner document of the element needs to have an associated window.\");\n  }\n\n  if (element.hidden === true) {\n    return true;\n  }\n\n  if (element.getAttribute(\"aria-hidden\") === \"true\") {\n    return true;\n  }\n\n  if (getComputedStyle(element).display === \"none\") {\n    return true;\n  }\n\n  return false;\n}","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,cAAT,CAAwBC,OAAxB,EAAiC;AACtC,MAAIC,qBAAJ;;AAEA,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,MAAIG,qBAAqB,GAAGJ,OAAO,CAACK,gBAApC;AAAA,MACIA,gBAAgB,GAAGD,qBAAqB,KAAK,KAAK,CAA/B,GAAmC,CAACL,qBAAqB,GAAGD,OAAO,CAACQ,aAAR,CAAsBC,WAA/C,MAAgE,IAAhE,IAAwER,qBAAqB,KAAK,KAAK,CAAvG,GAA2G,KAAK,CAAhH,GAAoHA,qBAAqB,CAACM,gBAA7K,GAAgMD,qBADvN;AAAA,MAEII,qBAAqB,GAAGR,OAAO,CAACS,qBAFpC;AAAA,MAGIC,yBAAyB,GAAGF,qBAAqB,KAAK,KAAK,CAA/B,GAAmCC,qBAAnC,GAA2DD,qBAH3F;;AAKA,MAAI,OAAOH,gBAAP,KAA4B,UAAhC,EAA4C;AAC1C,UAAM,IAAIM,SAAJ,CAAc,mEAAd,CAAN;AACD,GAXqC,CAWpC;;;AAGF,MAAIN,gBAAgB,CAACP,OAAD,CAAhB,CAA0Bc,UAA1B,KAAyC,QAA7C,EAAuD;AACrD,WAAO,IAAP;AACD;;AAED,MAAIC,cAAc,GAAGf,OAArB;;AAEA,SAAOe,cAAP,EAAuB;AACrB,QAAIH,yBAAyB,CAACG,cAAD,EAAiB;AAC5CR,MAAAA,gBAAgB,EAAEA;AAD0B,KAAjB,CAA7B,EAEI;AACF,aAAO,IAAP;AACD;;AAEDQ,IAAAA,cAAc,GAAGA,cAAc,CAACC,aAAhC;AACD;;AAED,SAAO,KAAP;AACD;AAED;AACA;AACA;AACA;AACA;AACA;;AACA,OAAO,SAASL,qBAAT,CAA+BX,OAA/B,EAAwC;AAC7C,MAAIiB,sBAAJ;;AAEA,MAAIf,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,EAAlF;AACA,MAAIe,sBAAsB,GAAGhB,OAAO,CAACK,gBAArC;AAAA,MACIA,gBAAgB,GAAGW,sBAAsB,KAAK,KAAK,CAAhC,GAAoC,CAACD,sBAAsB,GAAGjB,OAAO,CAACQ,aAAR,CAAsBC,WAAhD,MAAiE,IAAjE,IAAyEQ,sBAAsB,KAAK,KAAK,CAAzG,GAA6G,KAAK,CAAlH,GAAsHA,sBAAsB,CAACV,gBAAjL,GAAoMW,sBAD3N;;AAGA,MAAI,OAAOX,gBAAP,KAA4B,UAAhC,EAA4C;AAC1C,UAAM,IAAIM,SAAJ,CAAc,mEAAd,CAAN;AACD;;AAED,MAAIb,OAAO,CAACmB,MAAR,KAAmB,IAAvB,EAA6B;AAC3B,WAAO,IAAP;AACD;;AAED,MAAInB,OAAO,CAACoB,YAAR,CAAqB,aAArB,MAAwC,MAA5C,EAAoD;AAClD,WAAO,IAAP;AACD;;AAED,MAAIb,gBAAgB,CAACP,OAAD,CAAhB,CAA0BqB,OAA1B,KAAsC,MAA1C,EAAkD;AAChD,WAAO,IAAP;AACD;;AAED,SAAO,KAAP;AACD","names":["isInaccessible","element","options","getComputedStyle","ownerDocument","defaultView","_element$ownerDocumen","isSubtreeInaccessible","isSubtreeInaccessibleImpl","TypeError","visibility","currentElement","parentElement","_element$ownerDocumen2","hidden","getAttribute","display"],"sources":["C:\\Users\\HP\\AppData\\Local\\GitHubDesktop\\projects\\goit-react-hw-01-components\\node_modules\\dom-accessibility-api\\sources\\is-inaccessible.ts"],"sourcesContent":["export interface IsInaccessibleOptions {\n\tgetComputedStyle?: typeof window.getComputedStyle;\n\t/**\n\t * Can be used to return cached results from previous isSubtreeInaccessible calls.\n\t */\n\tisSubtreeInaccessible?: (element: Element) => boolean;\n}\n\n/**\n * Partial implementation https://www.w3.org/TR/wai-aria-1.2/#tree_exclusion\n * which should only be used for elements with a non-presentational role i.e.\n * `role=\"none\"` and `role=\"presentation\"` will not be excluded.\n *\n * Implements aria-hidden semantics (i.e. parent overrides child)\n * Ignores \"Child Presentational: True\" characteristics\n *\n * @param element\n * @param options\n * @returns {boolean} true if excluded, otherwise false\n */\nexport function isInaccessible(\n\telement: Element,\n\toptions: IsInaccessibleOptions = {}\n): boolean {\n\tconst {\n\t\tgetComputedStyle = element.ownerDocument.defaultView?.getComputedStyle,\n\t\tisSubtreeInaccessible: isSubtreeInaccessibleImpl = isSubtreeInaccessible,\n\t} = options;\n\tif (typeof getComputedStyle !== \"function\") {\n\t\tthrow new TypeError(\n\t\t\t\"Owner document of the element needs to have an associated window.\"\n\t\t);\n\t}\n\t// since visibility is inherited we can exit early\n\tif (getComputedStyle(element).visibility === \"hidden\") {\n\t\treturn true;\n\t}\n\n\tlet currentElement: Element | null = element;\n\twhile (currentElement) {\n\t\tif (isSubtreeInaccessibleImpl(currentElement, { getComputedStyle })) {\n\t\t\treturn true;\n\t\t}\n\n\t\tcurrentElement = currentElement.parentElement;\n\t}\n\n\treturn false;\n}\n\nexport interface IsSubtreeInaccessibleOptions {\n\tgetComputedStyle?: typeof window.getComputedStyle;\n}\n\n/**\n *\n * @param element\n * @param options\n * @returns {boolean} - `true` if every child of the element is inaccessible\n */\nexport function isSubtreeInaccessible(\n\telement: Element,\n\toptions: IsSubtreeInaccessibleOptions = {}\n): boolean {\n\tconst {\n\t\tgetComputedStyle = element.ownerDocument.defaultView?.getComputedStyle,\n\t} = options;\n\tif (typeof getComputedStyle !== \"function\") {\n\t\tthrow new TypeError(\n\t\t\t\"Owner document of the element needs to have an associated window.\"\n\t\t);\n\t}\n\n\tif ((element as HTMLElement).hidden === true) {\n\t\treturn true;\n\t}\n\n\tif (element.getAttribute(\"aria-hidden\") === \"true\") {\n\t\treturn true;\n\t}\n\n\tif (getComputedStyle(element).display === \"none\") {\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n"]},"metadata":{},"sourceType":"module"}