{"ast":null,"code":"export { getLocalName } from \"./getRole.mjs\";\nimport getRole, { getLocalName } from \"./getRole.mjs\";\nexport function isElement(node) {\n  return node !== null && node.nodeType === node.ELEMENT_NODE;\n}\nexport function isHTMLTableCaptionElement(node) {\n  return isElement(node) && getLocalName(node) === \"caption\";\n}\nexport function isHTMLInputElement(node) {\n  return isElement(node) && getLocalName(node) === \"input\";\n}\nexport function isHTMLOptGroupElement(node) {\n  return isElement(node) && getLocalName(node) === \"optgroup\";\n}\nexport function isHTMLSelectElement(node) {\n  return isElement(node) && getLocalName(node) === \"select\";\n}\nexport function isHTMLTableElement(node) {\n  return isElement(node) && getLocalName(node) === \"table\";\n}\nexport function isHTMLTextAreaElement(node) {\n  return isElement(node) && getLocalName(node) === \"textarea\";\n}\nexport function safeWindow(node) {\n  var _ref = node.ownerDocument === null ? node : node.ownerDocument,\n      defaultView = _ref.defaultView;\n\n  if (defaultView === null) {\n    throw new TypeError(\"no window available\");\n  }\n\n  return defaultView;\n}\nexport function isHTMLFieldSetElement(node) {\n  return isElement(node) && getLocalName(node) === \"fieldset\";\n}\nexport function isHTMLLegendElement(node) {\n  return isElement(node) && getLocalName(node) === \"legend\";\n}\nexport function isHTMLSlotElement(node) {\n  return isElement(node) && getLocalName(node) === \"slot\";\n}\nexport function isSVGElement(node) {\n  return isElement(node) && node.ownerSVGElement !== undefined;\n}\nexport function isSVGSVGElement(node) {\n  return isElement(node) && getLocalName(node) === \"svg\";\n}\nexport function isSVGTitleElement(node) {\n  return isSVGElement(node) && getLocalName(node) === \"title\";\n}\n/**\n *\n * @param {Node} node -\n * @param {string} attributeName -\n * @returns {Element[]} -\n */\n\nexport function queryIdRefs(node, attributeName) {\n  if (isElement(node) && node.hasAttribute(attributeName)) {\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute check\n    var ids = node.getAttribute(attributeName).split(\" \");\n    return ids.map(function (id) {\n      return node.ownerDocument.getElementById(id);\n    }).filter(function (element) {\n      return element !== null;\n    } // TODO: why does this not narrow?\n    );\n  }\n\n  return [];\n}\nexport function hasAnyConcreteRoles(node, roles) {\n  if (isElement(node)) {\n    return roles.indexOf(getRole(node)) !== -1;\n  }\n\n  return false;\n}","map":{"version":3,"mappings":"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","names":["getLocalName","getRole","isElement","node","nodeType","ELEMENT_NODE","isHTMLTableCaptionElement","isHTMLInputElement","isHTMLOptGroupElement","isHTMLSelectElement","isHTMLTableElement","isHTMLTextAreaElement","safeWindow","ownerDocument","defaultView","TypeError","isHTMLFieldSetElement","isHTMLLegendElement","isHTMLSlotElement","isSVGElement","ownerSVGElement","undefined","isSVGSVGElement","isSVGTitleElement","queryIdRefs","attributeName","hasAttribute","ids","getAttribute","split","map","id","getElementById","filter","element","hasAnyConcreteRoles","roles","indexOf"],"sources":["C:\\Users\\HP\\AppData\\Local\\GitHubDesktop\\projects\\goit-react-hw-01-components\\node_modules\\dom-accessibility-api\\sources\\util.ts"],"sourcesContent":["export { getLocalName } from \"./getRole\";\nimport getRole, { getLocalName } from \"./getRole\";\n\nexport function isElement(node: Node | null): node is Element {\n\treturn node !== null && node.nodeType === node.ELEMENT_NODE;\n}\n\nexport function isHTMLTableCaptionElement(\n\tnode: Node | null\n): node is HTMLTableCaptionElement {\n\treturn isElement(node) && getLocalName(node) === \"caption\";\n}\n\nexport function isHTMLInputElement(\n\tnode: Node | null\n): node is HTMLInputElement {\n\treturn isElement(node) && getLocalName(node) === \"input\";\n}\n\nexport function isHTMLOptGroupElement(\n\tnode: Node | null\n): node is HTMLOptGroupElement {\n\treturn isElement(node) && getLocalName(node) === \"optgroup\";\n}\n\nexport function isHTMLSelectElement(\n\tnode: Node | null\n): node is HTMLSelectElement {\n\treturn isElement(node) && getLocalName(node) === \"select\";\n}\n\nexport function isHTMLTableElement(\n\tnode: Node | null\n): node is HTMLTableElement {\n\treturn isElement(node) && getLocalName(node) === \"table\";\n}\n\nexport function isHTMLTextAreaElement(\n\tnode: Node | null\n): node is HTMLTextAreaElement {\n\treturn isElement(node) && getLocalName(node) === \"textarea\";\n}\n\nexport function safeWindow(node: Node): Window {\n\tconst { defaultView } =\n\t\tnode.ownerDocument === null ? (node as Document) : node.ownerDocument;\n\n\tif (defaultView === null) {\n\t\tthrow new TypeError(\"no window available\");\n\t}\n\treturn defaultView;\n}\n\nexport function isHTMLFieldSetElement(\n\tnode: Node | null\n): node is HTMLFieldSetElement {\n\treturn isElement(node) && getLocalName(node) === \"fieldset\";\n}\n\nexport function isHTMLLegendElement(\n\tnode: Node | null\n): node is HTMLLegendElement {\n\treturn isElement(node) && getLocalName(node) === \"legend\";\n}\n\nexport function isHTMLSlotElement(node: Node | null): node is HTMLSlotElement {\n\treturn isElement(node) && getLocalName(node) === \"slot\";\n}\n\nexport function isSVGElement(node: Node | null): node is SVGElement {\n\treturn isElement(node) && (node as SVGElement).ownerSVGElement !== undefined;\n}\n\nexport function isSVGSVGElement(node: Node | null): node is SVGSVGElement {\n\treturn isElement(node) && getLocalName(node) === \"svg\";\n}\n\nexport function isSVGTitleElement(node: Node | null): node is SVGTitleElement {\n\treturn isSVGElement(node) && getLocalName(node) === \"title\";\n}\n\n/**\n *\n * @param {Node} node -\n * @param {string} attributeName -\n * @returns {Element[]} -\n */\nexport function queryIdRefs(node: Node, attributeName: string): Element[] {\n\tif (isElement(node) && node.hasAttribute(attributeName)) {\n\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion -- safe due to hasAttribute check\n\t\tconst ids = node.getAttribute(attributeName)!.split(\" \");\n\n\t\treturn ids\n\t\t\t.map((id) => node.ownerDocument.getElementById(id))\n\t\t\t.filter(\n\t\t\t\t(element: Element | null): element is Element => element !== null\n\t\t\t\t// TODO: why does this not narrow?\n\t\t\t) as Element[];\n\t}\n\n\treturn [];\n}\n\nexport function hasAnyConcreteRoles(\n\tnode: Node,\n\troles: Array<string | null>\n): node is Element {\n\tif (isElement(node)) {\n\t\treturn roles.indexOf(getRole(node)) !== -1;\n\t}\n\treturn false;\n}\n"]},"metadata":{},"sourceType":"module"}